memberSearchIndex = [{"p":"science.aist.machinelearning.algorithm.nn","c":"NeuralNetwork","l":"getSpecificOptions()"},{"p":"science.aist.machinelearning.algorithm.nn","c":"NeuralNetwork","l":"isTrained()"},{"p":"science.aist.machinelearning.algorithm.nn","c":"NeuralNetwork","l":"load(InputStream, Consumer<MultiLayerNetwork>)","url":"load(java.io.InputStream,java.util.function.Consumer)"},{"p":"science.aist.machinelearning.algorithm.nn","c":"NeuralNetwork","l":"load(InputStream)","url":"load(java.io.InputStream)"},{"p":"science.aist.machinelearning.algorithm.nn","c":"NeuralNetwork","l":"load(String, Consumer<MultiLayerNetwork>)","url":"load(java.lang.String,java.util.function.Consumer)"},{"p":"science.aist.machinelearning.algorithm.nn","c":"NeuralNetwork","l":"load(String)","url":"load(java.lang.String)"},{"p":"science.aist.machinelearning.algorithm.nn","c":"NeuralNetwork","l":"NeuralNetwork(int[])","url":"%3Cinit%3E(int[])"},{"p":"science.aist.machinelearning.algorithm.nn","c":"NeuralNetwork","l":"save(String)","url":"save(java.lang.String)"},{"p":"science.aist.machinelearning.algorithm.nn","c":"NeuralNetwork","l":"setActivation(Activation[])","url":"setActivation(org.nd4j.linalg.activations.Activation[])"},{"p":"science.aist.machinelearning.algorithm.nn","c":"NeuralNetwork","l":"setActivation(int, Activation)","url":"setActivation(int,org.nd4j.linalg.activations.Activation)"},{"p":"science.aist.machinelearning.algorithm.nn","c":"NeuralNetwork","l":"setBuilderConsumer(Consumer<NeuralNetConfiguration.Builder>)","url":"setBuilderConsumer(java.util.function.Consumer)"},{"p":"science.aist.machinelearning.algorithm.nn","c":"NeuralNetwork","l":"setDoubleToSolutionTransformer(Function<Double, GT>)","url":"setDoubleToSolutionTransformer(java.util.function.Function)"},{"p":"science.aist.machinelearning.algorithm.nn","c":"NeuralNetwork","l":"setEpochs(int)"},{"p":"science.aist.machinelearning.algorithm.nn","c":"NeuralNetwork","l":"setIterations(int)"},{"p":"science.aist.machinelearning.algorithm.nn","c":"NeuralNetwork","l":"setLearningRate(double)"},{"p":"science.aist.machinelearning.algorithm.nn","c":"NeuralNetwork","l":"setListBuilderConsumer(Consumer<NeuralNetConfiguration.ListBuilder>)","url":"setListBuilderConsumer(java.util.function.Consumer)"},{"p":"science.aist.machinelearning.algorithm.nn","c":"NeuralNetwork","l":"setMultiLayerNetworkConsumer(Consumer<MultiLayerNetwork>)","url":"setMultiLayerNetworkConsumer(java.util.function.Consumer)"},{"p":"science.aist.machinelearning.algorithm.nn","c":"NeuralNetwork","l":"setOptimizationAlgo(OptimizationAlgorithm)","url":"setOptimizationAlgo(org.deeplearning4j.nn.api.OptimizationAlgorithm)"},{"p":"science.aist.machinelearning.algorithm.nn","c":"NeuralNetwork","l":"setOutputLayerLossFunction(LossFunctions.LossFunction)","url":"setOutputLayerLossFunction(org.nd4j.linalg.lossfunctions.LossFunctions.LossFunction)"},{"p":"science.aist.machinelearning.algorithm.nn","c":"NeuralNetwork","l":"setProblemToDoubleTransformer(ToDoubleFunction<PT>)","url":"setProblemToDoubleTransformer(java.util.function.ToDoubleFunction)"},{"p":"science.aist.machinelearning.algorithm.nn","c":"NeuralNetwork","l":"setSolutionToDoubleTransformer(ToDoubleFunction<GT>)","url":"setSolutionToDoubleTransformer(java.util.function.ToDoubleFunction)"},{"p":"science.aist.machinelearning.algorithm.nn","c":"NeuralNetwork","l":"setSpecificOption(String, Descriptor)","url":"setSpecificOption(java.lang.String,science.aist.machinelearning.core.options.Descriptor)"},{"p":"science.aist.machinelearning.algorithm.nn","c":"NeuralNetwork","l":"setUpdater(Updater)","url":"setUpdater(org.deeplearning4j.nn.conf.Updater)"},{"p":"science.aist.machinelearning.algorithm.nn","c":"NeuralNetwork","l":"setWeightInit(WeightInit)","url":"setWeightInit(org.deeplearning4j.nn.weights.WeightInit)"},{"p":"science.aist.machinelearning.algorithm.nn","c":"NeuralNetwork","l":"solve(Problem<PT>, Solution<GT, PT>)","url":"solve(science.aist.machinelearning.core.Problem,science.aist.machinelearning.core.Solution)"},{"p":"science.aist.machinelearning.algorithm.nn","c":"NeuralNetwork","l":"solve(Problem<PT>)","url":"solve(science.aist.machinelearning.core.Problem)"},{"p":"science.aist.machinelearning.algorithm.nn","c":"NeuralNetwork","l":"train(List<Problem<PT>>, List<Solution<GT, PT>>)","url":"train(java.util.List,java.util.List)"}]